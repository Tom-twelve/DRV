/**
 ******************************************************************************
 * @file		svpwm.h
 * @author		WrathWings
 * @version 	V1.0
 * @date		2018.1.17
 * @brief		The header file of svpwm.c
 ******************************************************************************
 * @attention
 *
 ******************************************************************************
 */
 /* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __SVPWM_H
#define __SVPWM_H

/* Private includes ----------------------------------------------------------*/
/* CODE BEGIN Includes */
#include "stm32f4xx_hal.h"
#include "tim.h"
#include "math.h"
#include "arm_math.h"
#include "tle5012.h"
/* CODE END Includes */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
#define	GeneratrixVoltage	25.0f		//(V)
#define CarrierFrequency	10000.f		//(Hz)
#define CarrierPeriod		0.0001f	//(s)

#define	SetDutyRatio_PhaseA(DutyRatio)	LL_TIM_OC_SetCompareCH3(TIM8, (uint32_t) ((float)DutyRatio * ((180000000 / CarrierFrequency) - 1)))
#define	SetDutyRatio_PhaseB(DutyRatio)	LL_TIM_OC_SetCompareCH2(TIM8, (uint32_t) ((float)DutyRatio * ((180000000 / CarrierFrequency) - 1)))
#define	SetDutyRatio_PhaseC(DutyRatio)	LL_TIM_OC_SetCompareCH1(TIM8, (uint32_t) ((float)DutyRatio * ((180000000 / CarrierFrequency) - 1)))

/* USER CODE END PD */

/* Private function prototypes -----------------------------------------------*/
/* USER CODE BEGIN PFP */
void SpaceVectorPulseWidthModulation(float voltageAlpha, float voltageBeta, float electricalAngle);
void ClarkTransform(float voltageA, float voltageB, float voltageC, float voltageAlpha, float voltageBeta);
void ParkTransform(float voltageA, float voltageB, float voltageC, float dVoltage, float qVoltage, float electricalAngle);
/* USER CODE END PFP */


#endif

/************************ (C) COPYRIGHT ACTION *****END OF FILE****/
